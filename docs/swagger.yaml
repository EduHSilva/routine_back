definitions:
  category.CreateCategoryRequest:
    properties:
      title:
        type: string
      user_id:
        type: integer
    type: object
  category.ResponseCategories:
    properties:
      data:
        items:
          $ref: '#/definitions/category.ResponseData'
        type: array
      message:
        type: string
    type: object
  category.ResponseCategory:
    properties:
      data:
        $ref: '#/definitions/category.ResponseData'
      message:
        type: string
    type: object
  category.ResponseData:
    properties:
      createAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      title:
        type: string
      updateAt:
        type: string
    type: object
  category.UpdateCategoryRequest:
    properties:
      title:
        type: string
    type: object
  helper.ErrorResponse:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  task.CreateTaskRequest:
    properties:
      category_id:
        type: integer
      date_end:
        type: string
      date_start:
        type: string
      end_time:
        type: string
      frequency:
        type: string
      priority:
        type: string
      start_time:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  task.ResponseData:
    properties:
      category:
        type: string
      createAt:
        type: string
      date_end:
        type: string
      date_start:
        type: string
      deletedAt:
        type: string
      end_time:
        type: string
      frequency:
        type: string
      id:
        type: integer
      priority:
        type: string
      start_time:
        type: string
      title:
        type: string
      updateAt:
        type: string
    type: object
  task.ResponseDataWeekTask:
    properties:
      category:
        type: string
      done:
        type: boolean
      end_time:
        type: string
      id:
        type: integer
      id_task:
        type: integer
      priority:
        type: string
      start_time:
        type: string
      title:
        type: string
    type: object
  task.ResponseDateTasks:
    properties:
      tasks:
        items:
          $ref: '#/definitions/task.ResponseDataWeekTask'
        type: array
    type: object
  task.ResponseTask:
    properties:
      data:
        $ref: '#/definitions/task.ResponseData'
      message:
        type: string
    type: object
  task.ResponseTaskMap:
    additionalProperties:
      $ref: '#/definitions/task.ResponseDateTasks'
    type: object
  task.ResponseTasks:
    properties:
      data:
        items:
          $ref: '#/definitions/task.ResponseData'
        type: array
      message:
        type: string
    type: object
  task.UpdateTaskRequest:
    properties:
      category_id:
        type: integer
      priority:
        type: string
      title:
        type: string
    type: object
  user.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  user.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  user.ResponseData:
    properties:
      createAt:
        type: string
      deletedAt:
        type: string
      email:
        type: string
      id:
        type: integer
      lastLogin:
        type: string
      name:
        type: string
      password:
        type: string
      updateAt:
        type: string
    type: object
  user.ResponseLogin:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/user.ResponseData'
    type: object
  user.ResponseUser:
    properties:
      data:
        $ref: '#/definitions/user.ResponseData'
      message:
        type: string
    type: object
  user.ResponseUsers:
    properties:
      data:
        items:
          $ref: '#/definitions/user.ResponseData'
        type: array
      message:
        type: string
    type: object
  user.UpdateUserRequest:
    properties:
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: Get all categories
      parameters:
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.ResponseCategories'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get categories
      tags:
      - Category
  /category:
    delete:
      consumes:
      - application/json
      description: Delete a category
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.ResponseCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete category
      tags:
      - Category
    get:
      consumes:
      - application/json
      description: Get one category
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.ResponseCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get category
      tags:
      - Category
    post:
      consumes:
      - application/json
      description: Create a new Category
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/category.CreateCategoryRequest'
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.ResponseCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create category
      tags:
      - Category
    put:
      consumes:
      - application/json
      description: Update the title of category
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/category.UpdateCategoryRequest'
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.ResponseCategory'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update category
      tags:
      - Category
  /login:
    post:
      consumes:
      - application/json
      description: Login and generate token
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseLogin'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Login
      tags:
      - User
  /task:
    put:
      consumes:
      - application/json
      description: Update task status
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.ResponseTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update task status
      tags:
      - Task
  /task/rule:
    delete:
      consumes:
      - application/json
      description: Delete a task and yours status
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.ResponseTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a task
      tags:
      - Task
    get:
      consumes:
      - application/json
      description: Get all info of the task
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.ResponseTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get task
      tags:
      - Task
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/task.CreateTaskRequest'
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.ResponseTask'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a task
      tags:
      - Task
  /tasks/rules:
    get:
      consumes:
      - application/json
      description: Get all tasks user
      parameters:
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.ResponseTasks'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get tasks
      tags:
      - Task
  /tasks/week:
    get:
      consumes:
      - application/json
      description: A map that associates dates (in string format) with ResponseDateTasks.
      parameters:
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      - description: currentDate
        in: query
        name: currentDate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task.ResponseTaskMap'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get tasks of week
      tags:
      - Task
  /user:
    delete:
      consumes:
      - application/json
      description: Delete a User
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Get all users
      parameters:
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseUsers'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get users
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create a new User
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      summary: Create user
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update user info
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/user.UpdateUserRequest'
      - description: Access token
        in: header
        name: x-access-token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/helper.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - User
swagger: "2.0"
